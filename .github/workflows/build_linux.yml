name: Test

on:
  push:
    #branches: [ master ]
  pull_request:
    #branches: [ master ]

jobs:

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    env:
        FREETDSCONF: /tmp/freetds.conf.local
        TDSDUMP: /tmp/freetds.log
        TDSDUMPCONFIG: /tmp/freetds-DUMP-CONFIG.log
        TDSPWDSRV: localhost
        TDSPWDUID: sa
        TDSPWDPWD: sqlServerPassw0rd
        TDSPORT: 1433
        TDSVER: 7.2
        TDSPWDFILE: /tmp/freetds.pwd

    services:
      SQLServer:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ env.TDSPWDPWD }}
        ports:
          - 1433:1433

    steps:

    - uses: actions/checkout@v2

    - name: before_install
      run:  |
        sudo apt-get install autoconf automake libtool gettext gperf
        autoreconf -i

    - name: configure
      run: ./configure --with-openssl  --enable-silent-rules

    - name: make
      run: make

    - name: make check1
      run: |
        echo -e "\n
        [global]\n
        port = ${TDSPORT}\n
        tds version = ${TDSVER}\n
        encryption = require\n
        [JDBC]\n" >> ${FREETDSCONF}

    - name: create PWD
      run: |
        echo -e "\n
        UID=${TDSPWDUID}
        PWD=${TDSPWDPWD}
        SRV=JDBC
        DB=tempdb" >> ${TDSPWDFILE}

    - name: make check2
      run: |
        set -e -x
        cat ${FREETDSCONF}
        cat ${TDSPWDFILE}
        ./src/apps/tsql -C
        ./src/apps/tsql -L -H "${TDSPWDSRV}"
        echo "SELECT @@VERSION\nGO\n" | ./src/apps/tsql -H "${TDSPWDSRV}" -p "${TDSPORT}" -U "${TDSPWDUID}" -P "${TDSPWDPWD}"

    - name: make check2
      run: >
        echo -e "SELECT @@VERSION\nGO\n"
        | TDSDUMPCONFIG=stdout ./src/apps/tsql -H "${TDSPWDSRV}" -p "${TDSPORT}" -U "${TDSPWDUID}" -P "${TDSPWDPWD}"
        | awk '(/encrypt level/ || data)   { print $0 }
               (/^Microsoft SQL Server/)   { data = 1; print ""; print }
               (/1 row affected/)          { exit }'
        cat ${TDSDUMP}

    - name: make check
      run: |
        misc/write_PWD_from_env_vars.sh
        make -C src/tds/unittests check

    - name: LOG
      if: ${{ failure() }}
      run: |
        cat src/tds/unittests/test-suite.log
        cat ${TDSDUMPCONFIG}
        cat ${TDSDUMP}

    - name: install
      run: make install
