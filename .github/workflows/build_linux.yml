name: Test

on:
  push:
    #branches: [ master ]
  pull_request:
    #branches: [ master ]

jobs:

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    env:
        FREETDSCONF: /tmp/freetds.conf.local
        TDSDUMP: /tmp/freetds.log
        TDSDUMPCONFIG: /tmp/freetds-DUMP-CONFIG.log
        TDSPWDSRV: local
        TDSPWDDB: tempdb
        TDSPWDUID: sa
        TDSPWDPWD: sqlServerPassw0rd
        TDSPORT: 1433
        TDSVER: 7.2
        TDSPWDFILE: /tmp/freetds.pwd

    services:
      SQLServer:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ env.TDSPWDPWD }}
        ports:
          - 1433:1433

    steps:

    - uses: actions/checkout@v2
      with:
        ref: branch-1_2

    - name: before_install
      run:  |
        sudo apt-get install autoconf automake libtool gettext gperf
        autoreconf -i

    - name: configure
      run: ./configure --with-openssl  --enable-silent-rules

    - name: make
      run: make

    - name: create FREETDSCONF
      run: |
        echo -e "\n
        [global]\n
        port = ${TDSPORT}\n
        tds version = ${TDSVER}\n
        encryption = require\n
        [local]\n
        host = 127.0.0.1\n" >> ${FREETDSCONF}

    - name: make check
      run: |
        misc/write_PWD_from_env_vars.sh
        make -C src/tds/unittests check

    - name: LOG
      if: ${{ failure() }}
      run: |
        cat src/tds/unittests/test-suite.log
        cat ${TDSDUMPCONFIG}
        cat ${TDSDUMP}

    - name: dist
      run: make dist

    - name: install
      run: make install
