name: Linux

on:
  push:
    #branches: [ master ]
  pull_request:
    #branches: [ master ]

jobs:

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04 ]
    continue-on-error: true

    steps:

    - uses: actions/checkout@v2

    - name: Install dependencies
      run:  |
        sudo apt-get install --no-install-recommends \
                            autoconf automake libtool gettext gperf \
                            libgnutls28-dev

    - name: configure
      run: |
        autoreconf -i
        ./configure --with-gnutls --enable-silent-rules

    - name: make
      run: |
        make
        src/apps/tsql -C

    - name: dist
      run: make dist

    - name: Archive tarball
      uses: actions/upload-artifact@v2
      with:
        name: freetds-src
        path: |
            freetds-*.tar.bz2
            freetds-*.tar.gz


  test:

    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        tds-version: [7.0, 7.1, 7.2, 7.3, 7.4]
        mssql-version: [2017, 2019]
    continue-on-error: true

    env:
        FREETDSCONF: /tmp/freetds/freetds.conf.local
        TDSDUMP: /tmp/freetds/freetds.log
        TDSDUMPCONFIG: /tmp/freetds/freetds-DUMP-CONFIG.log
        TDSPWDSRV: local
        TDSPWDDB: tempdb
        TDSPWDUID: sa
        TDSPWDPWD: sqlServerPassw0rd
        TDSPORT: 1433
        TDSVER: ${{ matrix.tds-version }}
        TDSPWDFILE: /tmp/freetds.pwd

    services:
      SQLServer:
        image: mcr.microsoft.com/mssql/server:${{ matrix.mssql-version }}-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ env.TDSPWDPWD }}
        ports:
          - 1433:1433

    steps:

    - uses: actions/checkout@v2

    - name: Install dependencies
      run:  |
        sudo apt-get install --no-install-recommends \
                            autoconf automake libtool gettext gperf \
                            libgnutls28-dev

    - name: configure
      run: |
        autoreconf -i
        ./configure --with-gnutls --enable-silent-rules

    - name: make
      run: |
        make
        src/apps/tsql -C

    - name: make check
      run: |
        mkdir -p `dirname ${FREETDSCONF}`
        echo -e "\n
        [global]\n
        port = ${TDSPORT}\n
        tds version = ${TDSVER}\n
        encryption = require\n
        [local]\n
        host = 127.0.0.1\n" >> ${FREETDSCONF}
        misc/write_PWD_from_env_vars.sh
        make -C src/tds/unittests check

    - name: Archive failed test results
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: test-logs
        path: |
            src/tds/unittests/test-suite.log
            /tmp/freetds/*


  release:

    name: Upload release tarballs
    runs-on: ubuntu-latest
    needs: build

    steps:

        - uses: actions/download-artifact@v2
          with:
            name: freetds-src

        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
             tag_name: ${{ github.ref }}
             release_name: Release ${{ github.ref }}
             draft: false
             prerelease: false

        - name: Upload Release Asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
             upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
             asset_path: ./my-artifact.zip
             asset_name: my-artifact.zip
             asset_content_type: application/zip
